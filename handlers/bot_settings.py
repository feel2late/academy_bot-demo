import datetime
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
import db_requests
from aiogram.fsm.context import FSMContext
from bot_init import bot
import json
from aiogram import types
import config
from states.add_new_course import AddCourse, AddModule, AddLesson
from states.send_message_to_all_users import SendMessageToAllUsers
from states.state_bot_settings import SetAuthorContact, SetWelcomeMessage, SetWelcomeVideo
from states.set_social_media import SetSocialMedia

from aiogram.filters import StateFilter


router = Router()  

@router.callback_query(F.data == "bot_settings")
async def admin_menu(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    builder = InlineKeyboardBuilder()
    builder.button(text='üôãüèº‚Äç‚ôÄÔ∏è –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', callback_data='set_welcome_message')
    builder.button(text='üé• –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ', callback_data='set_welcome_video')
    builder.button(text='üìß –ö–æ–Ω—Ç–∞–∫—Ç—ã –∞–≤—Ç–æ—Ä–∞ / —Å–æ—Ü.—Å–µ—Ç–∏', callback_data='author_contacts')
    builder.button(text='üîô –ê–¥–º–∏–Ω –º–µ–Ω—é', callback_data='admin_menu')
    builder.adjust(1)
    message_text = '–í—ã –≤ –∞–¥–º–∏–Ω –º–µ–Ω—é.'
    await callback.message.edit_text(message_text, reply_markup=builder.as_markup())


@router.callback_query(F.data == "set_welcome_message")
async def set_welcome_message(callback: CallbackQuery, state: FSMContext):
    await state.set_state(SetWelcomeMessage.text)
    builder = InlineKeyboardBuilder()
    builder.button(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='bot_settings')
    message_text = ('–ü—Ä–∏—à–ª–∏—Ç–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞.\n\n'
                    '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∫ –±–æ—Ç –≤—Å—Ç—Ä–µ—á–∞–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É /start')
    set_welcome_message_msg = await callback.message.edit_text(message_text, reply_markup=builder.as_markup())
    await state.update_data(set_welcome_message_msg=set_welcome_message_msg)


@router.message(StateFilter(SetWelcomeMessage.text))
async def welcome_message_recieved(message: Message, state: FSMContext):
    fsmdata = await state.get_data()
    await fsmdata.get('set_welcome_message_msg').edit_reply_markup(answer_markup='')
    await state.set_state()
    await db_requests.set_welcome_message(message.text)
    builder = InlineKeyboardBuilder()
    builder.button(text='üîô –ù–∞–∑–∞–¥', callback_data='bot_settings')
    message_text = f'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–ª–µ–¥—É—é—â–µ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n{message.text}'
    await message.answer(message_text, reply_markup=builder.as_markup())


@router.callback_query(F.data == "set_welcome_video")
async def set_welcome_video(callback: CallbackQuery, state: FSMContext):
    await state.set_state(SetWelcomeVideo.video)
    builder = InlineKeyboardBuilder()
    builder.button(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='bot_settings')
    message_text = ('–ü—Ä–∏—à–ª–∏—Ç–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞.\n\n'
                    '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–∫ –±–æ—Ç –≤—Å—Ç—Ä–µ—á–∞–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏–≤ –∫–æ–º–∞–Ω–¥—É /start')
    set_welcome_video_msg = await callback.message.edit_text(message_text, reply_markup=builder.as_markup())
    await state.update_data(set_welcome_video_msg=set_welcome_video_msg)


@router.message(F.video, StateFilter(SetWelcomeVideo.video))
async def welcome_video_recieved(message: Message, state: FSMContext):
    fsmdata = await state.get_data()
    await fsmdata.get('set_welcome_video_msg').edit_reply_markup(answer_markup='')
    await state.set_state()
    await db_requests.set_welcome_video(message.video.file_id)
    builder = InlineKeyboardBuilder()
    builder.button(text='üîô –ù–∞–∑–∞–¥', callback_data='bot_settings')
    message_text = f'‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ'
    await message.answer(message_text, reply_markup=builder.as_markup())
    
    
@router.callback_query(F.data == "author_contacts")
async def author_contact(callback: CallbackQuery, state: FSMContext):
    await state.clear()
    bot_settings = await db_requests.get_bot_settings()
    builder = InlineKeyboardBuilder()
    builder.button(text='–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', callback_data='edit_social_media_phonenumber')
    builder.button(text='–õ–∏—á–Ω—ã–π Telegram', callback_data='edit_social_media_telegram')
    builder.button(text='–õ–∏—á–Ω—ã–π Instagram', callback_data='edit_social_media_instagram')
    builder.button(text='–õ–∏—á–Ω—ã–π VK', callback_data='edit_social_media_vk')
    builder.button(text='–ì—Ä—É–ø–ø–∞ –≤ Telegram', callback_data='edit_social_media_telegram_group')
    builder.button(text='–ì—Ä—É–ø–ø–∞ –≤ VK', callback_data='edit_social_media_vk_group')
    builder.button(text='üîô –ù–∞–∑–∞–¥', callback_data='bot_settings')
    builder.adjust(1)
    message_text = (f'<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>: {bot_settings.author_phone_number if bot_settings.author_phone_number else "‚ùå"}\n'
                    f'<b>Telegram</b>: {bot_settings.author_telegram if bot_settings.author_telegram else "‚ùå"}\n'
                    f'<b>Instagram</b>: {bot_settings.author_instagram if bot_settings.author_instagram else "‚ùå"}\n'
                    f'<b>VK</b>: {bot_settings.author_vk if bot_settings.author_vk else "‚ùå"}\n'
                    f'<b>–ì—Ä—É–ø–ø–∞ Telegram</b>: {bot_settings.author_telegram_public if bot_settings.author_telegram_public else "‚ùå"}\n'
                    f'<b>–ì—Ä—É–ø–ø–∞ VK</b>: {bot_settings.author_vk_public if bot_settings.author_vk_public else "‚ùå"}\n\n'
                    '<b>–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:</b>')
    await callback.message.edit_text(message_text, reply_markup=builder.as_markup())
    

@router.callback_query(F.data.startswith("edit_social_media_"))
async def edit_social_media(callback: CallbackQuery, state: FSMContext):
    await state.set_state(SetSocialMedia.value)
    social_media_type = callback.data[18:]
    social_media_name = {'phonenumber': '–Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞', 'telegram': '–ª–∏—á–Ω–æ–≥–æ telegram', 'instagram': '–ª–∏—á–Ω–æ–≥–æ instagram',
                         'vk': '–ª–∏—á–Ω–æ–≥–æ VK', 'telegram_group': '–≥—Ä—É–ø–ø—ã –≤ telegram', 'vk_group': '–≥—Ä—É–ø–ø—ã –≤ VK'}
    await state.update_data(social_media_type=social_media_type)
    message_text = f'–ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É (–∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ) –¥–ª—è {social_media_name[social_media_type]}.'
    builder = InlineKeyboardBuilder()
    builder.button(text='üóë –£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ', callback_data=f'delete_social_media_{social_media_type}')
    builder.button(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='author_contacts')
    builder.adjust(1)
    set_new_social_media_value_msg = await callback.message.edit_text(message_text, reply_markup=builder.as_markup())
    await state.update_data(set_new_social_media_value_msg=set_new_social_media_value_msg)


@router.message(StateFilter(SetSocialMedia.value))
async def social_media_value_recieved(message: Message, state: FSMContext):
    fsmdata = await state.get_data()
    await fsmdata.get('set_new_social_media_value_msg').edit_reply_markup(answer_markup='')
    social_media_type = fsmdata.get('social_media_type')
    social_media_name = {'phonenumber': '–Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞', 'telegram': '–ª–∏—á–Ω–æ–≥–æ telegram', 'instagram': '–ª–∏—á–Ω–æ–≥–æ instagram',
                         'vk': '–ª–∏—á–Ω–æ–≥–æ VK', 'telegram_group': '–≥—Ä—É–ø–ø—ã –≤ telegram', 'vk_group': '–≥—Ä—É–ø–ø—ã –≤ VK'}
    await state.set_state()
    await db_requests.edit_social_media(social_media_type, message.text)
    builder = InlineKeyboardBuilder()
    builder.button(text='üîô –ù–∞–∑–∞–¥', callback_data='author_contacts')
    message_text = f'‚úÖ –°—Å—ã–ª–∫–∞ (–∑–Ω–∞—á–µ–Ω–∏–µ) –¥–ª—è {social_media_name[social_media_type]} –∏–∑–º–µ–Ω–µ–Ω–∞.'
    await message.answer(message_text, reply_markup=builder.as_markup())


@router.callback_query(F.data.startswith("delete_social_media_"), StateFilter(SetSocialMedia.value))
async def edit_social_media(callback: CallbackQuery, state: FSMContext):
    social_media_type = callback.data[20:]
    social_media_name = {'phonenumber': '–Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞', 'telegram': '–ª–∏—á–Ω–æ–≥–æ telegram', 'instagram': '–ª–∏—á–Ω–æ–≥–æ instagram',
                         'vk': '–ª–∏—á–Ω–æ–≥–æ VK', 'telegram_group': '–≥—Ä—É–ø–ø—ã –≤ telegram', 'vk_group': '–≥—Ä—É–ø–ø—ã –≤ VK'}
    await state.set_state()
    await db_requests.edit_social_media(social_media_type, None)
    builder = InlineKeyboardBuilder()
    builder.button(text='üîô –ù–∞–∑–∞–¥', callback_data='author_contacts')
    message_text = f'‚úÖ –°—Å—ã–ª–∫–∞ (–∑–Ω–∞—á–µ–Ω–∏–µ) –¥–ª—è {social_media_name[social_media_type]} —É–¥–∞–ª–µ–Ω–∞.'
    await callback.message.edit_text(message_text, reply_markup=builder.as_markup())


@router.message(Command("request_admin_rights")) 
async def request_admin_rights(message: Message, state: FSMContext):
    if config.DEMO:
        await db_requests.add_admin(message.from_user.id, message.from_user.full_name)
        await message.answer('–í–∞–º –≤—ã–¥–∞–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –¥–µ–º–æ —Ä–µ–∂–∏–º–µ.\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –∞–¥–º–∏–Ω-–º–µ–Ω—é –±–æ—Ç–∞ –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∫—É—Ä—Å–æ–º: /courses')
    else:
        await message.answer('–í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω root –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.')
        builder = InlineKeyboardBuilder()
        builder.button(text='‚úÖ –û–¥–æ–±—Ä–∏—Ç—å', callback_data=f'give_admin_rights_{message.from_user.id}')
        message_for_root_admin = f'–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–¥–º–∏–Ω –ø—Ä–∞–≤–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id} / {message.from_user.full_name}.'
        try:
            await bot.send_message(config.ROOT_ADMIN, message_for_root_admin, reply_markup=builder.as_markup())
        except:
            pass


@router.message(Command("delete_admins")) 
async def delete_admins(message: Message, state: FSMContext):
    if config.DEMO:
        await db_requests.delete_admins()
        await message.answer('–£–¥–∞–ª–∏–ª –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞.')


@router.callback_query(F.data.startswith("give_admin_rights_"))
async def give_admin_rights_(callback: CallbackQuery, state: FSMContext):
    new_admin_telegram_id = callback.data[18:]
    user = await db_requests.get_user_by_telegram_id(new_admin_telegram_id)
    await db_requests.add_admin(new_admin_telegram_id, user.user_name)
    await bot.send_message(new_admin_telegram_id, '‚úÖ –í–∞–º –≤—ã–¥–∞–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.')
    await callback.message.edit_text('–ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞ –≤—ã–¥–∞–Ω—ã')

